{"remainingRequest":"C:\\Users\\ndtin\\Desktop\\MISA.EShop\\MISA.Eshop.FE\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ndtin\\Desktop\\MISA.EShop\\MISA.Eshop.FE\\src\\views\\dictionary\\StoreDetail.vue?vue&type=template&id=252f6293&scoped=true&","dependencies":[{"path":"C:\\Users\\ndtin\\Desktop\\MISA.EShop\\MISA.Eshop.FE\\src\\views\\dictionary\\StoreDetail.vue","mtime":1624243680803},{"path":"C:\\Users\\ndtin\\Desktop\\MISA.EShop\\MISA.Eshop.FE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623718830884},{"path":"C:\\Users\\ndtin\\Desktop\\MISA.EShop\\MISA.Eshop.FE\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1623718906500},{"path":"C:\\Users\\ndtin\\Desktop\\MISA.EShop\\MISA.Eshop.FE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623718830884},{"path":"C:\\Users\\ndtin\\Desktop\\MISA.EShop\\MISA.Eshop.FE\\node_modules\\vue-loader\\lib\\index.js","mtime":1623718906497}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}