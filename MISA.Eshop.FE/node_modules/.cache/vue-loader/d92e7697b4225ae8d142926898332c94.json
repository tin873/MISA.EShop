{"remainingRequest":"C:\\Users\\ndtin\\Desktop\\MISA.EShop\\MISA.Eshop.FE\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ndtin\\Desktop\\MISA.EShop\\MISA.Eshop.FE\\src\\views\\dictionary\\StoreDetail.vue?vue&type=style&index=0&id=252f6293&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\ndtin\\Desktop\\MISA.EShop\\MISA.Eshop.FE\\src\\views\\dictionary\\StoreDetail.vue","mtime":1624012104407},{"path":"C:\\Users\\ndtin\\Desktop\\MISA.EShop\\MISA.Eshop.FE\\node_modules\\css-loader\\dist\\cjs.js","mtime":1623718855024},{"path":"C:\\Users\\ndtin\\Desktop\\MISA.EShop\\MISA.Eshop.FE\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1623718906499},{"path":"C:\\Users\\ndtin\\Desktop\\MISA.EShop\\MISA.Eshop.FE\\node_modules\\postcss-loader\\src\\index.js","mtime":1623718882356},{"path":"C:\\Users\\ndtin\\Desktop\\MISA.EShop\\MISA.Eshop.FE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623718830884},{"path":"C:\\Users\\ndtin\\Desktop\\MISA.EShop\\MISA.Eshop.FE\\node_modules\\vue-loader\\lib\\index.js","mtime":1623718906497}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICIuLi8uLi9zdHlsZXMvZGljdGlvbmFyeS9zdG9yZURldGFpbC5jc3MiOw0K"},{"version":3,"sources":["StoreDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2+BA","file":"StoreDetail.vue","sourceRoot":"src/views/dictionary","sourcesContent":["<template>\r\n  <div class=\"modal\">\r\n    <div class=\"modal-background\"></div>\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <div class=\"header-title\">{{ titleModel }}</div>\r\n        <div class=\"icon-modal icon-close\" @click=\"close()\"></div>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"modal-item\">\r\n          <div class=\"modal-item-name\">Mã cửa hàng<span>*</span></div>\r\n          <div class=\"model-item-input\">\r\n            <input\r\n              ref=\"forcusFirst\"\r\n              class=\"validate-input mgr-5\"\r\n              type=\"text\"\r\n              :class=\"{ error: isActiveError }\"\r\n              v-model=\"store.storeCode\"\r\n              @input=\"requireStoreCode\"\r\n              @blur=\"requireStoreCode\"\r\n            />\r\n            <div\r\n              class=\"icon-error .hover-pointer\"\r\n              :class=\"{ isActive: isActiveError }\"\r\n              v-bind:title=\"titleErrorCode\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-item\">\r\n          <div class=\"modal-item-name\">Tên cửa hàng<span>*</span></div>\r\n          <div class=\"model-item-input\">\r\n            <input\r\n              v-model=\"store.storeName\"\r\n              :class=\"{ error: isActiveErrorStoreName }\"\r\n              @input=\"RequireStoreName\"\r\n              @blur=\"RequireStoreName\"\r\n              class=\"validate-input mgr-5\"\r\n              type=\"text\"\r\n            />\r\n            <div\r\n              class=\"icon-error .hover-pointer\"\r\n              :class=\"{ isActive: isActiveErrorStoreName }\"\r\n              v-bind:title=\"titleErrorName\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-item-special\">\r\n          <div class=\"modal-item-name\">Địa chỉ<span>*</span></div>\r\n          <div class=\"model-item-input\">\r\n            <textarea\r\n              v-model=\"store.address\"\r\n              :class=\"{ error: isActiveErrorAddress }\"\r\n              @input=\"RequireAddress\"\r\n              @blur=\"RequireAddress\"\r\n              class=\"validate-textarea mgr-5\"\r\n              type=\"text\"\r\n            />\r\n            <div\r\n              class=\"icon-error .hover-pointer\"\r\n              :class=\"{ isActive: isActiveErrorAddress }\"\r\n              v-bind:title=\"titleErrorAddress\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-item\">\r\n          <div class=\"double-item\">\r\n            <div class=\"modal-item-name\">Số điện thoại</div>\r\n            <div class=\"input-error\">\r\n              <input\r\n                v-model=\"store.phoneNumber\"\r\n                :class=\"{ error: isActiveErrorPhone }\"\r\n                class=\"validate-input-sort\"\r\n                type=\"text\"\r\n                @input=\"validatePhoneNumber($event.target.value)\"\r\n              />\r\n              <div\r\n                class=\"icon-error .hover-pointer\"\r\n                :class=\"{ isActive: isActiveErrorPhone }\"\r\n                v-bind:title=\"titleErrorPhone\"\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"double-item\">\r\n            <div class=\"modal-item-name\">Mã số thuế</div>\r\n            <div class=\"input-error\">\r\n              <input\r\n                v-model=\"store.storeTaxCode\"\r\n                class=\"validate-input-sort\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-item\">\r\n          <div class=\"double-item\">\r\n            <div class=\"modal-item-name\">Quốc gia</div>\r\n            <div class=\"cellcal-flex\">\r\n              <div class=\"combobox-model\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"inputCountry\"\r\n                  v-model=\"countryName\"\r\n                  placeholder=\"chọn quốc gia\"\r\n                  @input=\"onSearchCountry($event.target.value)\"\r\n                  :class=\"{error: isActiveErrorCountry}\"\r\n                  @blur=\"checkValueCountry\"\r\n                  class=\"input-custom-cbb\"\r\n                />\r\n                <button class=\"btn-cbb icon-down\" @click=\"showDropCountry\" \r\n                :class=\"{setMargin: isActiveErrorCountry}\"/>\r\n                <div\r\n                  class=\"icon-error .hover-pointer\"\r\n                  :class=\"{ isActive: isActiveErrorCountry }\"\r\n                  v-bind:title=\"titleErrorCountry\"\r\n                ></div>\r\n              </div>\r\n              <!-- buid item-->\r\n              <div class=\"flex-item\" :class=\"{ isActiveCbb: isActive, isActiveCbbWidth: isActiveErrorCountry}\">\r\n                <div\r\n                  :class=\"{ activeItem: item.countryId == countryId, setWith: isActiveErrorCountry }\"\r\n                  v-for=\"item in listItemCountry\"\r\n                  :key=\"item.countryId\"\r\n                  class=\"item\"\r\n                  @click=\"selectItemCountry(item.countryId, item.countryName)\"\r\n                >\r\n                  {{ item.countryName }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-item\">\r\n          <div class=\"double-item\">\r\n            <div class=\"modal-item-name\">Tỉnh/Thành phố</div>\r\n            <div class=\"cellcal-flex\">\r\n              <div class=\"combobox-model\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"inputProvince\"\r\n                  v-model=\"provinceName\"\r\n                  placeholder=\"chọn thành phố\"\r\n                  @input=\"onSearchProvince($event.target.value)\"\r\n                  :class=\"{error: isActiveErrorProvince}\"\r\n                  @blur=\"checkValueProvince\"\r\n                  class=\"input-custom-cbb\"\r\n                />\r\n                <button class=\"btn-cbb icon-down\" @click=\"showDropProvince\" \r\n                :class=\"{setMargin: isActiveErrorProvince}\"/>\r\n                <div\r\n                  class=\"icon-error .hover-pointer\"\r\n                  :class=\"{ isActive: isActiveErrorProvince }\"\r\n                  v-bind:title=\"titleErrorProvince\"\r\n                ></div>\r\n              </div>\r\n              <!-- buid item-->\r\n              <div class=\"flex-item\" :class=\"{ isActiveCbb: isActiveProvince, isActiveCbbWidth: isActiveErrorProvince }\">\r\n                <div\r\n                  :class=\"{ activeItem: item.provinceId == provinceId, setWith: isActiveErrorProvince }\"\r\n                  v-for=\"item in listItemProvince\"\r\n                  :key=\"item.provinceId\"\r\n                  class=\"item\"\r\n                  @click=\"\r\n                    selectItemProvince(item.provinceId, item.provinceName)\r\n                  \"\r\n                >\r\n                  {{ item.provinceName }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"double-item\">\r\n            <div class=\"modal-item-name\">Quận/Huyện</div>\r\n            <div class=\"cellcal-flex\">\r\n              <div class=\"combobox-model\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"inputDistrict\"\r\n                  v-model=\"districtName\"\r\n                  placeholder=\"chọn Quận/Huyện\"\r\n                  @input=\"onSearchDistrict($event.target.value)\"\r\n                  :class=\"{error: isActiveErrorDistrict}\"\r\n                  @blur=\"checkValueDistrict\"\r\n                  class=\"input-custom-cbb\"\r\n                />\r\n                <button class=\"btn-cbb icon-down\" @click=\"showDropDistrict\" \r\n                :class=\"{setMargin: isActiveErrorDistrict}\"/>\r\n                <div\r\n                  class=\"icon-error .hover-pointer\"\r\n                  :class=\"{ isActive: isActiveErrorDistrict}\"\r\n                  v-bind:title=\"titleErrorProvince\"\r\n                ></div>\r\n              </div>\r\n              <!-- buid item-->\r\n              <div class=\"flex-item\" :class=\"{ isActiveCbb: isActiveDistrict,isActiveCbbWidth: isActiveErrorDistrict  }\">\r\n                <div\r\n                  :class=\"{ activeItem: item.districtId == districtId, setWith: isActiveDistrict }\"\r\n                  v-for=\"item in listItemDistrict\"\r\n                  :key=\"item.districtId\"\r\n                  class=\"item\"\r\n                  @click=\"\r\n                    selectItemDistrict(item.districtId, item.districtName)\r\n                  \"\r\n                >\r\n                  {{ item.districtName }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-item\">\r\n          <div class=\"double-item\">\r\n            <div class=\"modal-item-name\">Phường/Xã</div>\r\n            <div class=\"cellcal-flex\">\r\n              <div class=\"combobox-model\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"inputWard\"\r\n                  v-model=\"wardName\"\r\n                  placeholder=\"chọn Xã/Phường\"\r\n                  @input=\"onSearchWard($event.target.value)\"\r\n                  :class=\"{error: isActiveErrorWard}\"\r\n                  @blur=\"checkValueWard\"\r\n                  class=\"input-custom-cbb\"\r\n                />\r\n                <button class=\"btn-cbb icon-down\" @click=\"showDropWard\" \r\n                :class=\"{setMargin: isActiveErrorWard}\" />\r\n                <div\r\n                  class=\"icon-error .hover-pointer\"\r\n                  :class=\"{ isActive: isActiveErrorWard}\"\r\n                  v-bind:title=\"titleErrorProvince\"\r\n                ></div>\r\n              </div>\r\n              <!-- buid item-->\r\n              <div class=\"flex-item\" :class=\"{ isActiveCbb: isActiveWard, isActiveCbbWidth: isActiveErrorWard }\">\r\n                <div\r\n                  :class=\"{ activeItem: item.wardId == wardId, setWith: isActiveWard }\"\r\n                  v-for=\"item in listItemWard\"\r\n                  :key=\"item.wardId\"\r\n                  class=\"item\"\r\n                  @click=\"selectItemWard(item.wardId, item.wardName)\"\r\n                >\r\n                  {{ item.wardName }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"double-item\">\r\n            <div class=\"modal-item-name\">Đường Phố</div>\r\n            <div class=\"input-error\">\r\n              <input\r\n                v-model=\"store.street\"\r\n                class=\"validate-input-sort\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <div class=\"footer-left\">\r\n          <button class=\"btn-footer-help hover-pointer\">\r\n            <div class=\"icon-footer-help\"></div>\r\n            <div class=\"item-footer-name\">Trợ giúp</div>\r\n          </button>\r\n        </div>\r\n        <div class=\"footer-right\">\r\n          <button\r\n            class=\"btn-footer-save mgr-8 hover-pointer\"\r\n            @click=\"addNewStore\"\r\n          >\r\n            <div class=\"icon-footer-save\"></div>\r\n            <div class=\"item-footer-save\">Lưu</div>\r\n          </button>\r\n          <button\r\n            class=\"btn-footer-add-save mgr-8 hover-pointer\"\r\n            @click=\"addNewStore\"\r\n          >\r\n            <div class=\"icon-footer-add\"></div>\r\n            <div class=\"item-footer-name-add\">Lưu và thêm mới</div>\r\n          </button>\r\n          <button class=\"btn-footer-cancel hover-pointer\" @click=\"close()\">\r\n            <div class=\"icon-footer-cancel\"></div>\r\n            <div class=\"item-footer-name-cancel\">Hủy bỏ</div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <DialogStoreCodeExits\r\n      v-if=\"isShowDialogWaning\"\r\n      @closeTabWaning=\"closeTabWaning\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport DialogStoreCodeExits from \"../../components/dialog/DialogStoreCodeExits.vue\";\r\nexport default {\r\n  name: \"StoreDetail\",\r\n  props: [\"titleModel\", \"rowData\", \"replicationId\", \"editId\"],\r\n  components: {\r\n    DialogStoreCodeExits,\r\n  },\r\n  computed: {\r\n    store() {\r\n      return this.$store.getters.getDataRow;\r\n    },\r\n    /*\r\n     *lấy giá trị hiển thị dialog waning\r\n     */\r\n    isShowDialogWaning() {\r\n      return this.$store.getters.getIsShowDialogWaning;\r\n    },\r\n  },\r\n  created() {\r\n    //lấy thông tin quốc gia\r\n    this.getCountry();\r\n    //lấy thông tin quốc gia, thành phố, quận huyện, xã phường khi sửa hoặc nhân bản\r\n    this.getAddress();\r\n  },\r\n  mounted() {\r\n    this.$refs.forcusFirst.focus();\r\n  },\r\n  methods: {\r\n    /*\r\n     *Lưu dữ liệu vào DB\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    addNewStore() {\r\n      console.log(this.store.storeId != null);\r\n      if (\r\n        this.store.storeId != null &&\r\n        this.store.storeName != null &&\r\n        this.store.address != null\r\n      ) {\r\n        //truyền id quốc gia khi chọn\r\n        this.store.countryId = this.countryId;\r\n        //truyền id thành phố khi chọn\r\n        this.store.provinceId = this.provinceId;\r\n        //truyền id quận huyện khi chọn\r\n        this.store.districtId = this.districtId;\r\n        //truyền id xã phường khi chọn\r\n        this.store.wardId = this.wardId;\r\n        //nếu thêm mới thì set hoạt động cho cửa hàng\r\n        if (this.store.status == null) {\r\n          this.store.status = false;\r\n        }\r\n        //nếu nhân bản bỏ StoreId\r\n        if (this.replicationId != \"\") {\r\n          this.$delete(this.store, \"storeId\");\r\n        }\r\n        //lưu lại\r\n        this.fsave();\r\n        if (this.editId == \"\") {\r\n          console.log(this.editId);\r\n          this.reload();\r\n        }\r\n      } else {\r\n        this.isActiveErrorStoreName = true;\r\n        this.isActiveError = true;\r\n        this.isActiveErrorAddress = true;\r\n        this.titleErrorCode = \"Trường này không được để trống\";\r\n        this.titleErrorName = \"Trường này không được để trống\";\r\n        this.titleErrorAddress = \"Trường này không được để trống\";\r\n      }\r\n    },\r\n    //load lại trang\r\n    reload() {\r\n      if (this.replicationId != \"\") {\r\n        this.store.push({ storeId: this.replicationId });\r\n      }\r\n      console.log(this.store);\r\n      this.$emit(\"AddStoreNew\", this.store);\r\n    },\r\n    /*\r\n     *Thực hiện thêm mới hoặc sửa dữ liệu nhập vào\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    async fsave() {\r\n      var url = \"\";\r\n      await this.checkStoreCodeExist(this.store.storeCode);\r\n      if (this.isCodeExits) {\r\n        if (this.store.storeId != null) {\r\n          //sửa thông tin\r\n          console.log(\"Sửa\");\r\n          try {\r\n            url = `${this.$Const.API_HOST}/api/v1/Stores/${this.store.storeId}`;\r\n            let response = await axios.put(url, this.store);\r\n            //Sửa thành công đóng cửa xổ model\r\n            if (response.data.data == 1) {\r\n              this.close();\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        } else {\r\n          //thêm mới\r\n          try {\r\n            console.log(this.store);\r\n            console.log(\"Thêm mới\");\r\n            url = `${this.$Const.API_HOST}/api/v1/Stores`;\r\n            let response = await axios.post(url, this.store);\r\n            console.log(response);\r\n            if (response.data.data == 1) {\r\n              this.close();\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }\r\n      } else {\r\n        this.openWaning();\r\n      }\r\n    },\r\n    /*\r\n     *Kiểm tra bắt buộc nhập trường storeCode\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    requireStoreCode() {\r\n      let code = this.store.storeCode;\r\n      if (code == \"\" || code == null) {\r\n        this.titleErrorCode = \"Trường này không được để trống.\";\r\n        this.isActiveError = true;\r\n      } else {\r\n        this.isActiveError = false;\r\n      }\r\n    },\r\n    /*\r\n     *Kiểm tra bắt buộc nhập trường storeName\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    RequireStoreName() {\r\n      let name = this.store.storeName;\r\n      if (name == \"\" || name == null) {\r\n        this.titleErrorName = \"Trường này không được để trống.\";\r\n        this.isActiveErrorStoreName = true;\r\n      } else {\r\n        this.isActiveErrorStoreName = false;\r\n      }\r\n    },\r\n    /*\r\n     *Kiểm tra bắt buộc nhập trường address\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    RequireAddress() {\r\n      let address = this.store.address;\r\n      if (address == \"\" || address == null) {\r\n        this.titleErrorAddress = \"Trường này không được để trống.\";\r\n        this.isActiveErrorAddress = true;\r\n      } else {\r\n        this.isActiveErrorAddress = false;\r\n      }\r\n    },\r\n    /*\r\n     *Kiểm tra mã cửa hàng có tồn tại không\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    async checkStoreCodeExist(storeCode) {\r\n      try {\r\n        var url = `${this.$Const.API_HOST}/api/v1/Stores/check/${storeCode}`;\r\n        await axios.get(url).then((response) => {\r\n          this.isCodeExits = response.data.data;\r\n        });\r\n      } catch (error) {\r\n        console.console.warn(error);\r\n      }\r\n    },\r\n    /*\r\n     * Lấy tên quốc gia, thành phố, xã phwuowngn, quận huyện khi sửa hoặc nhân bản\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    getAddress() {\r\n      var store = this.store;\r\n      if (store != null) {\r\n        this.getCountryName(store.countryId);\r\n        this.getProvinceName(store.provinceId);\r\n        this.getDistrictName(store.districtId);\r\n        this.getWardName(store.wardId);\r\n      }\r\n    },\r\n    /*\r\n     *Call API lấy tên, mã quốc gia\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    async getCountryName(id) {\r\n      var url = `${this.$Const.API_HOST}/api/v1/Countrys/${id}`;\r\n      await axios\r\n        .get(url)\r\n        .then((response) => {\r\n          this.countryName = response.data.data.countryName;\r\n          this.countryId = response.data.data.countryId;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      if (this.store.countryId != null) {\r\n        this.getProvince(id);\r\n      }\r\n    },\r\n    /*\r\n     *Call API lấy tên, mã Thành phố\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    async getProvinceName(id) {\r\n      var url = `${this.$Const.API_HOST}/api/v1/Provinces/${id}`;\r\n      await axios\r\n        .get(url)\r\n        .then((response) => {\r\n          this.provinceName = response.data.data.provinceName;\r\n          this.provinceId = response.data.data.provinceId;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      if (this.store.provinceId != null) {\r\n        this.getDistrict(id);\r\n      }\r\n    },\r\n    /*\r\n     *Call api lấy tên, mã quận huyện\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    async getDistrictName(id) {\r\n      var url = `${this.$Const.API_HOST}/api/v1/Districts/${id}`;\r\n      await axios\r\n        .get(url)\r\n        .then((response) => {\r\n          this.districtName = response.data.data.districtName;\r\n          this.districtId = response.data.data.districtId;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      if (this.store.districtId != null) {\r\n        this.getWard(id);\r\n      }\r\n    },\r\n    /*\r\n     *Call api lấy tên, mã xã phường\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    async getWardName(id) {\r\n      var url = `${this.$Const.API_HOST}/api/v1/Wards/${id}`;\r\n      await axios\r\n        .get(url)\r\n        .then((response) => {\r\n          this.wardName = response.data.data.wardName;\r\n          this.wardId = response.data.data.wardId;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    //đóng cửa sổ\r\n    close() {\r\n      this.$emit(\"closeTab\");\r\n    },\r\n    //==================Thao tác Combobox Quốc gia==================\r\n    /*\r\n     *Thực hiện hiển thị danh sách quốc gia\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    showDropCountry() {\r\n      this.isActive = !this.isActive;\r\n      this.listItemCountry = this.listCountry;\r\n      document.getElementById(\"inputCountry\").focus();\r\n    },\r\n    /*\r\n     *tìm kiếm quốc gia khi nhập từ khóa\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    onSearchCountry(value) {\r\n      //nếu không có giá trị thì không hiện\r\n      this.countryId = null;\r\n      this.provinceName = null;\r\n      this.provinceId = null;\r\n      this.districtName = null;\r\n      this.districtId = null;\r\n      this.wardName = null;\r\n      this.wardId = null;\r\n      if (value == \"\") {\r\n        this.isActive = false;\r\n      } else {\r\n        this.listItemCountry = this.listCountry.filter((lists) =>\r\n          lists.countryName.toLowerCase().includes(value.toLowerCase())\r\n        );\r\n        //xử lý\r\n        if (this.listItemCountry[0].countryId != \"\" && this.listItemCountry[0].countryId != null) {\r\n          this.isActive = true;\r\n        }\r\n        else{\r\n            this.isActive = false;\r\n        }\r\n      }\r\n    },\r\n    /*\r\n     *Lưu lại mã và tên quốc gia khi chọn\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    selectItemCountry(id, name) {\r\n      //lưu lại mã, tên quốc gia\r\n      this.countryName = name;\r\n      this.countryId = id;\r\n      //thực hiện đóng combobox\r\n      this.isActive = !this.isActive;\r\n      //call api lấy danh sách thành phố từ mã quốc gia\r\n      this.getProvince(id);\r\n      //set các giá trị thành phố, quận huyện, xã phường về null khi chọn quốc gia mới\r\n      this.provinceName = null;\r\n      this.provinceId = null;\r\n      this.districtName = null;\r\n      this.districtId = null;\r\n      this.wardName = null;\r\n      this.wardId = null;\r\n      document.getElementById(\"inputCountry\").focus();\r\n    },\r\n    /*\r\n     *call Api lấy danh sách quốc gia\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    async getCountry() {\r\n      var url = `${this.$Const.API_HOST}/api/v1/Countrys`;\r\n      await axios\r\n        .get(url)\r\n        .then((response) => {\r\n          this.listCountry = response.data.data;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    //===========Thao Tác trên combobox Thành phố===============\r\n    /*\r\n     *Tìm kiếm thành phố bằng từ khóa\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    onSearchProvince(value) {\r\n      //nếu không có giá trị thì không hiện\r\n      this.provinceId = null;\r\n      this.districtName = null;\r\n      this.districtId = null;\r\n      this.wardName = null;\r\n      this.wardId = null;\r\n      if (value == \"\") {\r\n        this.isActiveProvince = false;\r\n      } else {\r\n        this.listItemProvince = this.listProvince.filter((lists) =>\r\n          lists.provinceName.toLowerCase().includes(value.toLowerCase())\r\n        );\r\n        if (this.listItemProvince[0].provinceId != \"\" && this.listItemProvince[0].provinceId != null ) {\r\n          this.isActiveProvince = true;\r\n        }\r\n        else{\r\n            this.isActiveProvince = false;\r\n        }\r\n      }\r\n    },\r\n    /*\r\n     *Hiển thị tất cả thành phố khi click vào button\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    showDropProvince() {\r\n      this.isActiveProvince = !this.isActiveProvince;\r\n      this.listItemProvince = this.listProvince;\r\n      document.getElementById(\"inputProvince\").focus();\r\n    },\r\n    /*\r\n     *Lưu lại mã, tên thành phố khi chọn\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    selectItemProvince(id, name) {\r\n      //lưu lại mã, tên\r\n      this.provinceName = name;\r\n      this.provinceId = id;\r\n      //đóng combobox\r\n      this.isActiveProvince = !this.isActiveProvince;\r\n      //thực hiện call api lấy danh sách quận huyện từ mã thành phố\r\n      this.getDistrict(id);\r\n      //set các giá trị mã, tên quận huyện, xã phường về null khi chọn thành phố mới\r\n      this.districtName = null;\r\n      this.districtId = null;\r\n      this.wardName = null;\r\n      this.wardId = null;\r\n      document.getElementById(\"inputProvince\").focus();\r\n    },\r\n    /*\r\n     *call api lấy danh sách quốc gia\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    async getProvince(id) {\r\n      var url = `${this.$Const.API_HOST}/api/v1/Provinces/GetProvincetWithCountry/${id}`;\r\n      await axios\r\n        .get(url)\r\n        .then((response) => {\r\n          this.listProvince = response.data.data;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    //===========Thao tác trên combobox Quận huyện==========\r\n    /*\r\n     *tìm kiếm quận huyện bằng từ khóa\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    onSearchDistrict(value) {\r\n      this.districtId = null;\r\n      this.wardName = null;\r\n      this.wardId = null;\r\n      //nếu không có giá trị thì không hiện\r\n      if (value == \"\") {\r\n        this.isActiveDistrict = false;\r\n      } else {\r\n        this.listItemDistrict = this.listDistrict.filter((lists) =>\r\n          lists.districtName.toLowerCase().includes(value.toLowerCase())\r\n        );\r\n        if (this.listItemDistrict[0].districtId != \"\" && this.listItemDistrict[0].districtId != null) {\r\n          this.isActiveDistrict = true;\r\n        }\r\n        else{\r\n            this.isActiveDistrict = false;\r\n        }\r\n      }\r\n    },\r\n    /*\r\n     *Hiển thị tất cả quận huyện khi click vào button\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    showDropDistrict() {\r\n      this.isActiveDistrict = !this.isActiveDistrict;\r\n      this.listItemDistrict = this.listDistrict;\r\n      document.getElementById(\"inputDistrict\").focus();\r\n    },\r\n    /*\r\n     *lưu lại giá trị tên, mã quận huyện khi chọn\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    selectItemDistrict(id, name) {\r\n      //lưu lại tên, mã\r\n      this.districtName = name;\r\n      this.districtId = id;\r\n      //đóng combobox\r\n      this.isActiveDistrict = !this.isActiveDistrict;\r\n      //lấy danh sách xã phường theo id quận huyện\r\n      this.getWard(id);\r\n      //set giá trị xã phường về null khi chọn quận huyện mới\r\n      this.wardName = null;\r\n      this.wardId = null;\r\n      document.getElementById(\"inputDistrict\").focus();\r\n    },\r\n    /*\r\n     *call api lấy danh sách quận huyện theo id thành phố\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    async getDistrict(id) {\r\n      var url = `${this.$Const.API_HOST}/api/v1/Districts/GetDistrictWithProvince/${id}`;\r\n      await axios\r\n        .get(url)\r\n        .then((response) => {\r\n          this.listDistrict = response.data.data;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n\r\n    //===========Thao tác xử lý trên combobox Xã phường\r\n    /*\r\n     *Thực hiện tìm kiếm xã phường bằng từ khóa\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    onSearchWard(value) {\r\n      this.wardId = null;\r\n      //nếu không có giá trị thì không hiện\r\n      if (value == \"\") {\r\n        this.isActiveWard = false;\r\n      } else {\r\n        this.listItemWard = this.listWard.filter((lists) =>\r\n          lists.wardName.toLowerCase().includes(value.toLowerCase())\r\n        );\r\n        if (this.listItemWard[0].wardId != \"\" && this.listItemWard[0].wardId != null) {\r\n          this.isActiveWard = true;\r\n        }\r\n        else{\r\n            this.isActiveWard = false;\r\n        }\r\n      }\r\n    },\r\n    /*\r\n     * hiển thị tất cả các xã phường trong quận huyện đã chọn\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    showDropWard() {\r\n      this.isActiveWard = !this.isActiveWard;\r\n      this.listItemWard = this.listWard;\r\n      document.getElementById(\"inputWard\").focus();\r\n    },\r\n    /*\r\n     *Lưu lại tên, mã xã phường đã chọn\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    selectItemWard(id, name) {\r\n      //lưu tên, mã\r\n      this.wardName = name;\r\n      this.wardId = id;\r\n      //đóng combobox\r\n      this.isActiveWard = !this.isActiveWard;\r\n      document.getElementById(\"inputWard\").focus();\r\n    },\r\n    /*\r\n     *call api lấy xã, phường theo quận huyện\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    async getWard(id) {\r\n      var url = `${this.$Const.API_HOST}/api/v1/Wards/GetWardWithDistrict/${id}`;\r\n      await axios\r\n        .get(url)\r\n        .then((response) => {\r\n          this.listWard = response.data.data;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    /*\r\n     *đóng tap waning\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    closeTabWaning() {\r\n      this.$store.commit(\"showDialogWaning\");\r\n    },\r\n    /*\r\n     *mở tap waning\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    openWaning() {\r\n      this.$store.commit(\"showDialogWaning\");\r\n    },\r\n    /*\r\n     *chỉ cho phép nhập số vào ô input\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    validatePhoneNumber(evt) {\r\n      var letter = /^[0-9]+$/;\r\n      if (!evt.match(letter)) {\r\n        this.isActiveErrorPhone = true;\r\n        this.titleErrorPhone = \"Dữ liệu không đúng mời nhập lại.\";\r\n      } else {\r\n        this.isActiveErrorPhone = false;\r\n      }\r\n      if (evt == \"\") {\r\n        this.isActiveErrorPhone = false;\r\n      }\r\n    },\r\n    /*\r\n     *Kiểm tra dữ liệu country đúng chưua\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    checkValueCountry(){\r\n        if(this.countryId == null){\r\n            if(this.countryName == null || this.countryName == \"\")\r\n            {\r\n                this.isActiveErrorCountry = false;\r\n            }\r\n            else{\r\n                this.isActiveErrorCountry = true;\r\n                this.titleErrorCountry = \"Giá trị bạn chọn không tồn tại trong danh sách.\";\r\n            }\r\n        }\r\n        else{\r\n            this.isActiveErrorCountry = false;\r\n        }    \r\n        if(this.countryId == null)\r\n        {\r\n            this.countryName = null;\r\n        }\r\n    },\r\n    /*\r\n     *Kiểm tra dữ liệu Province đúng chưua\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    checkValueProvince(){\r\n        if(this.provinceId == null){\r\n            if(this.provinceName == null || this.provinceName == \"\")\r\n            {\r\n                this.isActiveErrorProvince = false;\r\n            }\r\n            else{\r\n                this.isActiveErrorProvince = true;\r\n                this.titleErrorProvince = \"Giá trị bạn chọn không tồn tại trong danh sách.\";\r\n            }\r\n        }\r\n        else{\r\n            this.isActiveErrorProvince = false;\r\n        }\r\n        if(this.provinceId == null)\r\n        {\r\n            this.provinceName = null;\r\n        }\r\n    },\r\n    /*\r\n     *Kiểm tra dữ liệu District đúng chưua\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    checkValueDistrict(){\r\n        if(this.districtId == null){\r\n            if(this.districtName == null || this.districtName == \"\")\r\n            {\r\n                this.isActiveErrorDistrict = false;\r\n            }\r\n            else{\r\n                this.isActiveErrorDistrict = true;\r\n                this.titleErrorDistrict = \"Giá trị bạn chọn không tồn tại trong danh sách.\";\r\n            }\r\n        }\r\n        else{\r\n            this.isActiveErrorDistrict = false;\r\n        }\r\n        if(this.districtId == null)\r\n        {\r\n            this.districtName = null;\r\n        }\r\n    },\r\n    /*\r\n     *Kiểm tra dữ liệu Ward đúng chưua\r\n     *CreatedBy: ndtin(18/06/2021)\r\n     */\r\n    checkValueWard(){\r\n        if(this.wardId == null){\r\n            if(this.wardName == null || this.wardName == \"\")\r\n            {\r\n                this.isActiveErrorWard = false;\r\n            }\r\n            else{\r\n                this.isActiveErrorWard = true;\r\n                this.titleErrorWard = \"Giá trị bạn chọn không tồn tại trong danh sách.\";\r\n            }\r\n        }\r\n        else{\r\n            this.isActiveErrorWard = false;\r\n        }\r\n        if(this.wardId == null)\r\n        {\r\n            this.wardName = null;\r\n        }\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      //Country\r\n      listItemCountry: [],\r\n      listCountry: [],\r\n      isActive: false,\r\n      countryName: null,\r\n      countryId: null,\r\n      //provice\r\n      provinceName: null,\r\n      provinceId: null,\r\n      isActiveProvince: false,\r\n      listItemProvince: [],\r\n      listProvince: [],\r\n      //District\r\n      districtName: null,\r\n      districtId: null,\r\n      isActiveDistrict: false,\r\n      listItemDistrict: [],\r\n      listDistrict: [],\r\n      //ward\r\n      wardName: null,\r\n      wardId: null,\r\n      isActiveWard: false,\r\n      listItemWard: [],\r\n      listWard: [],\r\n      //actieve error storeCode\r\n      isActiveError: false,\r\n      titleErrorCode: \"\",\r\n      isActiveErrorStoreName: false,\r\n      titleErrorName: \"\",\r\n      isActiveErrorAddress: false,\r\n      titleErrorAddress: \"\",\r\n      //check code store\r\n      isCodeExits: false,\r\n      isActiveErrorPhone: false,\r\n      titleErrorPhone: \"\",\r\n      //check combobox value\r\n      //country\r\n      isActiveErrorCountry: false,\r\n      titleErrorCountry: \"\",\r\n      //provice\r\n      isActiveErrorProvince: false,\r\n      titleErrorProvince: \"\",\r\n      //district\r\n      isActiveErrorDistrict: false,\r\n      titleErrorDistrict: \"\",\r\n      //Ward\r\n      isActiveErrorWard: false,\r\n      titleErrorWard: \"\",\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import \"../../styles/dictionary/storeDetail.css\";\r\n</style>\r\n"]}]}